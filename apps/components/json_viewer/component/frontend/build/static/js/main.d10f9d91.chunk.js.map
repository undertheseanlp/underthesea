{"version":3,"sources":["MyComponent.tsx","index.tsx"],"names":["JsonViewer","props","onChanged","e","data","updated_src","Streamlit","setComponentValue","setState","json_object","render","StyledReactJson","styled","ReactJson","margin","width","hMargin","src","state","onEdit","onDelete","onAdd","console","log","args","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","MyComponent","document","getElementById"],"mappings":"gQAiBMA,E,kDACJ,WAAYC,GAAY,IAAD,uBACrB,cAAMA,IASAC,UAAY,SAACC,GAClB,IAAIC,EAAOD,EAAEE,YAGb,OAFAC,IAAUC,kBAAkBH,GAC5B,EAAKI,SAAS,CAACC,YAAaL,KACrB,GAda,EAgBhBM,OAAS,WACd,IAEMC,EAAkBC,YAAOC,IAAPD,CAAkB,CACxCE,OAAO,GAAD,OAHQ,EAGR,cAFQ,GAER,MACNC,MAAO,EAAKd,MAAMc,MAASC,KAG7B,OACE,kBAACL,EAAD,CACEM,IAAK,EAAKC,MAAL,YACLC,OAAQ,EAAKjB,UACbkB,SAAU,EAAKlB,UACfmB,MAAO,EAAKnB,aA3BhBoB,QAAQC,IAAItB,GACZ,IAAMG,EAAO,EAAKH,MAAMuB,KAAX,YAHQ,OAIrB,EAAKN,MAAQ,CACX,YAAed,GAEjBE,IAAUC,kBAAkBH,GAPP,E,UADAqB,KA0CVC,cAAwB1B,GCvDvC2B,IAASjB,OACP,kBAAC,IAAMkB,WAAP,KACE,kBAACC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.d10f9d91.chunk.js","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\nimport { styled } from '@material-ui/core/styles';\nimport ReactJson from 'react-json-view'\n\ninterface State {\n  json_object: object\n}\n\n/**\n * This is a React-based component template. The `render()` function is called\n * automatically when your component should be re-rendered.\n */\nclass JsonViewer extends StreamlitComponentBase<State> {\n  constructor(props: any){\n    super(props)\n    console.log(props)\n    const data = this.props.args[\"json_object\"]\n    this.state = {\n      \"json_object\": data\n    }\n    Streamlit.setComponentValue(data)\n  }\n\n  private onChanged = (e: any): boolean => {\n     var data = e.updated_src\n     Streamlit.setComponentValue(data)\n     this.setState({json_object: data})\n     return true\n  }\n  public render = (): ReactNode => {\n    const vMargin = 7\n    const hMargin = 20\n    const StyledReactJson = styled(ReactJson)({\n      margin: `${vMargin}px ${hMargin}px`,\n      width: this.props.width - (hMargin * 2)\n    });\n\n    return (\n      <StyledReactJson\n        src={this.state[\"json_object\"]}\n        onEdit={this.onChanged}\n        onDelete={this.onChanged}\n        onAdd={this.onChanged}\n      />\n    )\n  }\n\n}\n\n// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\nexport default withStreamlitConnection(JsonViewer)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport MyComponent from \"./MyComponent\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <MyComponent />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}